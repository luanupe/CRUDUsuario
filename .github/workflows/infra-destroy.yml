name: Infrastructure Destroy

on:
  workflow_dispatch:

jobs:
  prepare_destroy:
    name: prepare_destroy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Show branch
        run: echo "Running on branch ${{ github.ref }}"

      - name: Get repository
        id: check_repository
        run: echo ::set-output name=repository::${GITHUB_REPOSITORY#*/}-${GITHUB_SHA:0:7}
      
      - name: Get branch
        id: check_branch
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "::set-output name=branch::master"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "::set-output name=branch::develop"
          fi   
      
      - name: Get environment
        id: check_environment
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "::set-output name=environment::production"
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "::set-output name=environment::homologation"
          fi
    outputs:
      repository: ${{ steps.check_repository.outputs.repository }}
      branch: ${{ steps.check_branch.outputs.branch }}
      environment: ${{ steps.check_environment.outputs.environment }}

  destroy:
    needs: prepare_destroy
    runs-on: ubuntu-latest
    if: ${{ needs.prepare_destroy.outputs.branch }} == 'master' || ${{ needs.prepare_destroy.outputs.branch }} == 'develop'
    environment: ${{ needs.prepare_destroy.outputs.environment }}

    defaults:
      run:
        working-directory: ./Terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Init terraform
        id: init
        run: |
          terraform init -get -reconfigure \
            -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_ID }}" \
            -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY }}" \
            -backend-config="key=${{ secrets.APPLICATION_NAME }}/${{ needs.prepare_destroy.outputs.environment }}/terraform.tfstate" \
            -backend-config="endpoint=https://${{ secrets.DIGITALOCEAN_REGION }}.digitaloceanspaces.com" \
            -backend-config="bucket=terraform-${{ secrets.APPLICATION_NAME }}"
      
      - name: Destroy terraform
        id: destroy
        run: |
          terraform destroy \
            -var="secret_token=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" \
            -var="secret_spaces_id=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_ID }}" \
            -var="secret_spaces_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY }}" \
            -var="project_environment=${{ needs.prepare_destroy.outputs.environment }}" \
            -var="application_region=${{ secrets.DIGITALOCEAN_REGION }}" \
            -var="application_name=${{ secrets.APPLICATION_NAME }}" \
            -var="application_domain=${{ secrets.APPLICATION_DOMAIN }}" \
            -var="application_subdomain=${{ secrets.APPLICATION_SUBDOMAIN }}" \
            -var="web_git_repository=${{ needs.prepare_destroy.outputs.repository }}" \
            -var="web_git_branch=${{ needs.prepare_destroy.outputs.branch }}" \
            -var="web_environment_jwt_public=${{ secrets.ENVIRONMENT_JWT_PUBLIC }}" \
            -var="web_environment_jwt_private=${{ secrets.ENVIRONMENT_JWT_PRIVATE }}" \
            -auto-approve
